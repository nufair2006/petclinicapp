<?xml version='1.0' encoding='UTF-8'?>
<BugCollection version='4.9.4' threshold='low' effort='max'><file classname='org.springframework.samples.petclinic.model.Owner'><BugInstance type='DM_CONVERT_CASE' priority='Low' category='I18N' message='Use of non-localized String.toUpperCase() or String.toLowerCase() in org.springframework.samples.petclinic.model.Owner.getPet(String, boolean)' lineNumber='127'/></file><file classname='org.springframework.samples.petclinic.model.Pet'><BugInstance type='EI_EXPOSE_REP' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Pet.getOwner() may expose internal representation by returning Pet.owner' lineNumber='82'/><BugInstance type='EI_EXPOSE_REP' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Pet.getType() may expose internal representation by returning Pet.type' lineNumber='74'/><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Pet.setType(PetType) may expose internal representation by storing an externally mutable object into Pet.type' lineNumber='78'/></file><file classname='org.springframework.samples.petclinic.model.TestClass'><BugInstance type='DM_NUMBER_CTOR' priority='Normal' category='PERFORMANCE' message='new org.springframework.samples.petclinic.model.TestClass() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead' lineNumber='9'/><BugInstance type='DM_STRING_TOSTRING' priority='Low' category='PERFORMANCE' message='org.springframework.samples.petclinic.model.TestClass.test() invokes toString() method on a String' lineNumber='6'/><BugInstance type='EC_UNRELATED_TYPES' priority='High' category='CORRECTNESS' message='Call to String.equals(Integer) in org.springframework.samples.petclinic.model.TestClass.check(Object)' lineNumber='24'/><BugInstance type='EI_EXPOSE_REP' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.TestClass.getNumbers() may expose internal representation by returning TestClass.numbers' lineNumber='42'/><BugInstance type='ES_COMPARING_PARAMETER_STRING_WITH_EQ' priority='High' category='BAD_PRACTICE' message='Comparison of String parameter using == or != in org.springframework.samples.petclinic.model.TestClass.isValid(String)' lineNumber='28'/><BugInstance type='IS2_INCONSISTENT_SYNC' priority='Low' category='MT_CORRECTNESS' message='Inconsistent synchronization of org.springframework.samples.petclinic.model.TestClass.counter; locked 66% of time' lineNumber='20'/><BugInstance type='NP_ALWAYS_NULL' priority='High' category='CORRECTNESS' message='Null pointer dereference of s in org.springframework.samples.petclinic.model.TestClass.test()' lineNumber='6'/><BugInstance type='NP_LOAD_OF_KNOWN_NULL_VALUE' priority='Low' category='STYLE' message='Load of known null value in org.springframework.samples.petclinic.model.TestClass.test()' lineNumber='6'/><BugInstance type='RV_RETURN_VALUE_IGNORED' priority='Low' category='CORRECTNESS' message='Return value of String.toString() ignored in org.springframework.samples.petclinic.model.TestClass.test()' lineNumber='6'/><BugInstance type='SBSC_USE_STRINGBUFFER_CONCATENATION' priority='Normal' category='PERFORMANCE' message='org.springframework.samples.petclinic.model.TestClass.buildString() concatenates strings using + in a loop' lineNumber='34'/><BugInstance type='URF_UNREAD_FIELD' priority='Normal' category='PERFORMANCE' message='Unread field: org.springframework.samples.petclinic.model.TestClass.j' lineNumber='10'/></file><file classname='org.springframework.samples.petclinic.model.Vets'><BugInstance type='EI_EXPOSE_REP' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Vets.getVetList() may expose internal representation by returning Vets.vetList' lineNumber='40'/></file><file classname='org.springframework.samples.petclinic.model.Visit'><BugInstance type='EI_EXPOSE_REP' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Visit.getPet() may expose internal representation by returning Visit.pet' lineNumber='109'/><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='org.springframework.samples.petclinic.model.Visit.setPet(Pet) may expose internal representation by storing an externally mutable object into Visit.pet' lineNumber='118'/></file><file classname='org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl'><BugInstance type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE' priority='Normal' category='STYLE' message='Possible null pointer dereference in org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int) due to return value of called method' lineNumber='106'/><BugInstance type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE' priority='Normal' category='STYLE' message='Possible null pointer dereference in org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(Owner) due to return value of called method' lineNumber='119'/></file><file classname='org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl'><BugInstance type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE' priority='Normal' category='STYLE' message='Possible null pointer dereference in org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int) due to return value of called method' lineNumber='86'/></file><file classname='org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl'><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='new org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl(JdbcTemplate) may expose internal representation by storing an externally mutable object into JdbcVetRepositoryImpl.jdbcTemplate' lineNumber='51'/><BugInstance type='SIC_INNER_SHOULD_BE_STATIC_ANON' priority='Low' category='PERFORMANCE' message='The class org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1 could be refactored into a named _static_ inner class' lineNumber='72'/></file><file classname='org.springframework.samples.petclinic.util.CallMonitoringAspect'><BugInstance type='AT_NONATOMIC_64BIT_PRIMITIVE' priority='Normal' category='MT_CORRECTNESS' message='This write of the 64-bit primitive variable "accumulatedCallTime" may not atomic' lineNumber='60'/><BugInstance type='AT_STALE_THREAD_WRITE_OF_PRIMITIVE' priority='Normal' category='MT_CORRECTNESS' message='Shared primitive variable "callCount" in one thread may not yield the value of the most recent write from another thread' lineNumber='59'/><BugInstance type='AT_STALE_THREAD_WRITE_OF_PRIMITIVE' priority='Normal' category='MT_CORRECTNESS' message='Shared primitive variable "enabled" in one thread may not yield the value of the most recent write from another thread' lineNumber='54'/><BugInstance type='IS2_INCONSISTENT_SYNC' priority='Normal' category='MT_CORRECTNESS' message='Inconsistent synchronization of org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime; locked 66% of time' lineNumber='60'/><BugInstance type='IS2_INCONSISTENT_SYNC' priority='Normal' category='MT_CORRECTNESS' message='Inconsistent synchronization of org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount; locked 50% of time' lineNumber='59'/></file><file classname='org.springframework.samples.petclinic.web.CrashController'><BugInstance type='THROWS_METHOD_THROWS_RUNTIMEEXCEPTION' priority='Low' category='BAD_PRACTICE' message='Method intentionally throws RuntimeException.' lineNumber='34'/></file><Error></Error><Project><SrcDir>/home/nufair-subair/Downloads/Petclinic/src/main/java</SrcDir><SrcDir>/home/nufair-subair/Downloads/Petclinic/target/generated-sources/annotations</SrcDir><SrcDir>/home/nufair-subair/Downloads/Petclinic/src/test/java</SrcDir><SrcDir>/home/nufair-subair/Downloads/Petclinic/target/generated-test-sources/test-annotations</SrcDir></Project></BugCollection>